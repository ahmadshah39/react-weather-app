{"version":3,"sources":["components/styled-components/Container.ts","Context/ActionTypes.ts","Context/GlobalReducer.tsx","Context/GlobalState.tsx","components/SearchForm/SearchFrom.style.ts","components/SearchForm/SearchFrom.tsx","assets/windSoliddark.svg","assets/dropletdark.svg","assets/cloudSoliddark.svg","components/WeatherCard/WeatherCard.style.ts","components/WeatherCard/LocationCard.tsx","components/WeatherCard/UserLocCard.tsx","assets/windSolid.svg","assets/droplet.svg","assets/cloudSolid.svg","components/WeatherCard/WeakDayCard.tsx","components/WeatherCard/WeatherCard.tsx","components/WeekForcast/WeekForcast.style.ts","components/WeekForcast/WeekDay.tsx","components/WeekForcast/WeekList.tsx","components/Alert/Alert.style.ts","components/Alert/Alert.tsx","components/LoadingBar/LoadingBar.tsx","components/ThemeToggleBtn/ThemeToggleBtn.style.ts","components/ThemeToggleBtn/ThemeToggleBtn.tsx","App.tsx","index.tsx"],"names":["BodyWrapper","styled","div","props","theme","bodyBg","Container","Title","h1","text","GET_SEARCHED_LOCATION","GET_USER_LOCATION","GET_WEEK_FORECAST","SET_CURRENT","CLEAR_ALL","SET_ERROR","ClEAR_ERROR","SET_LOADING","SET_THEME","GlobalReducer","state","action","type","UserLocation","payload","loading","SearchedLocation","WeekForeCast","Current","error","Error","API_KEY","initialState","GlobalContext","createContext","getUserLocationWeather","getSerachedLocationData","getSerachedLocationWeekForecast","setWeatherDay","setLoading","switchTheme","clearAll","GlobalProvider","children","useReducer","dispatch","a","navigator","geolocation","getCurrentPosition","fetchUserLocationWeather","success","coords","latitude","longitude","url","fetch","json","res","lat","lon","setTimeout","console","log","cod","coord","message","daily","Provider","value","Wrapper","SearchFrom","useState","setText","globalContext","useContext","onSubmit","e","preventDefault","className","placeholder","name","id","onChange","target","src","alt","cardBG","LocationCard","Weather","main","weather","dt","wind","clouds","temp","humidity","description","icon","date","Date","toLocaleDateString","toUpperCase","windSolidDark","speed","dropletDark","cloudSolidDark","all","current","wind_speed","WeekDayCard","Searched","max","windSolid","droplet","cloudSolid","WeatherCard","transitionUser","useTransition","from","opacity","height","width","enter","transitionCurr","transitionLoc","style","item","UserLocCard","WeekDay","day","onClick","getDay","min","WeekList","transitions","Alert","translate","keyframes","LoadingBar","ThemeToggleBtn","href","App","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ef96a84.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nexport const BodyWrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  height: 100%;\r\n  background-color: ${(props) => props.theme.bodyBg};\r\n`;\r\nexport const Container = styled.div`\r\n  padding: 0 15px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  max-width: 100%;\r\n  @media (min-width: 576px) {\r\n    max-width: 540px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    max-width: 720px;\r\n  }\r\n  @media (min-width: 992px) {\r\n    max-width: 960px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    max-width: 1140px;\r\n  }\r\n  /* @media (min-width: 1400px) {\r\n    max-width: 1320px;\r\n  } */\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: ${(props) => props.theme.text};\r\n  margin: 30px 0;\r\n  text-align: center;\r\n  font-size: 36px;\r\n  font-weight: 400;\r\n`;\r\n","export const GET_SEARCHED_LOCATION = \"GET_SEARCHED_LOCATION\";\r\nexport const GET_USER_LOCATION = \"GET_USER_LOCATION\";\r\nexport const GET_WEEK_FORECAST = \"GET_WEEK_FORECAST\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_ALL = \"CLEAR_ALL\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const ClEAR_ERROR = \"ClEAR_ERROR\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const SET_THEME = \"SET_THEME\";\r\n","import {\r\n  GET_SEARCHED_LOCATION,\r\n  GET_WEEK_FORECAST,\r\n  SET_CURRENT,\r\n  CLEAR_ALL,\r\n  SET_ERROR,\r\n  ClEAR_ERROR,\r\n  SET_LOADING,\r\n  SET_THEME,\r\n  GET_USER_LOCATION\r\n} from \"./ActionTypes\";\r\nimport { SearchLocationData, LocationWeekForcast, Daily ,UserLocationData} from \"./Interfaces\";\r\nimport { State } from \"./GlobalState\";\r\n\r\n// types\r\ntype action =\r\n  | {\r\n      type: typeof GET_USER_LOCATION;\r\n      payload: UserLocationData | null;\r\n    }\r\n  | {\r\n      type: typeof GET_SEARCHED_LOCATION;\r\n      payload: SearchLocationData | null;\r\n    }\r\n  | {\r\n      type: typeof GET_WEEK_FORECAST;\r\n      payload: LocationWeekForcast | null;\r\n    }\r\n  | {\r\n      type: typeof SET_CURRENT;\r\n      payload: Daily;\r\n    }\r\n  | {\r\n      type: typeof SET_ERROR;\r\n      payload: string;\r\n    }\r\n  | {\r\n      type: typeof CLEAR_ALL;\r\n    }\r\n  | {\r\n      type: typeof ClEAR_ERROR;\r\n    }\r\n  | {\r\n      type: typeof SET_LOADING;\r\n    }\r\n  | {\r\n      type: typeof SET_THEME;\r\n    };\r\n\r\nconst GlobalReducer = (state: State, action: action) => {\r\n  switch (action.type) {\r\n    case GET_USER_LOCATION:\r\n      return {\r\n        ...state,\r\n        UserLocation: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_SEARCHED_LOCATION:\r\n      return {\r\n        ...state,\r\n        SearchedLocation: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_WEEK_FORECAST:\r\n      return {\r\n        ...state,\r\n        WeekForeCast: action.payload,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        Current: action.payload,\r\n      };\r\n    case SET_THEME:\r\n      return {\r\n        ...state,\r\n        theme: !state.theme,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    case ClEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case CLEAR_ALL:\r\n      return {\r\n        ...state,\r\n        Current: null,\r\n        SearchedLocation: null,\r\n        WeekForeCast: null,\r\n      };\r\n\r\n    default:\r\n      throw new Error(\"Bad action\");\r\n  }\r\n};\r\nexport default GlobalReducer;\r\n","import { createContext, useReducer } from \"react\";\r\nimport GlobalReducer from \"./GlobalReducer\";\r\nimport { SearchLocationData, LocationWeekForcast, Daily, UserLocationData } from \"./Interfaces\";\r\nimport {\r\n  GET_SEARCHED_LOCATION,\r\n  GET_WEEK_FORECAST,\r\n  SET_CURRENT,\r\n  CLEAR_ALL,\r\n  SET_ERROR,\r\n  ClEAR_ERROR,\r\n  SET_LOADING,\r\n  GET_USER_LOCATION,\r\n  SET_THEME,\r\n} from \"./ActionTypes\";\r\n// Types\r\nconst API_KEY = \"56c9248f68b3e3c4dd4a7f59bfdc1ad0\";\r\nexport type State = {\r\n  UserLocation: UserLocationData | null;\r\n  SearchedLocation: SearchLocationData | null;\r\n  WeekForeCast: LocationWeekForcast | null;\r\n  Current: Daily | null;\r\n  error: string | null;\r\n  loading: boolean;\r\n  theme: boolean;\r\n};\r\n\r\nexport interface IGlobalContextPorps {\r\n  getSerachedLocationData: (text: string) => void;\r\n  getUserLocationWeather: ()=>void;\r\n  getSerachedLocationWeekForecast: (lat: number | \"\", lon: number | \"\") => void;\r\n  setWeatherDay: (daily: Daily) => void;\r\n  setLoading: () => void;\r\n  switchTheme: () => void;\r\n  clearAll: () => void;\r\n  UserLocation: UserLocationData | null;\r\n  SearchedLocation: SearchLocationData | null;\r\n  WeekForeCast: LocationWeekForcast | null;\r\n  Current: Daily | null;\r\n  error: string | null;\r\n  loading: boolean;\r\n  theme: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n  UserLocation: null,\r\n  SearchedLocation: null,\r\n  WeekForeCast: null,\r\n  Current: null,\r\n  error: null,\r\n  loading: false,\r\n  theme: false,\r\n};\r\n\r\nexport const GlobalContext = createContext<IGlobalContextPorps>({\r\n  UserLocation: initialState.UserLocation,\r\n  SearchedLocation: initialState.SearchedLocation,\r\n  WeekForeCast: initialState.WeekForeCast,\r\n  Current: initialState.Current,\r\n  error: initialState.error,\r\n  loading: initialState.loading,\r\n  theme: initialState.theme,\r\n  getUserLocationWeather: () => {},\r\n  getSerachedLocationData: () => {},\r\n  getSerachedLocationWeekForecast: () => {},\r\n  setWeatherDay: () => {},\r\n  setLoading: () => {},\r\n  switchTheme: () => {},\r\n  clearAll: () => {},\r\n});\r\n\r\nexport const GlobalProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [state, dispatch] = useReducer(GlobalReducer, initialState);\r\n\r\n  //   Actions\r\n\r\n  //   getUserLocation Weather data\r\nconst   getUserLocationWeather = async () => {\r\n    navigator.geolocation.getCurrentPosition(fetchUserLocationWeather);\r\n}\r\nconst fetchUserLocationWeather = async (success:any) => {\r\n\r\n    let {latitude, longitude } = success.coords;\r\n    const url =`https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=hourly,minutely,daily&units=metric&appid=${API_KEY}`;\r\n    try {\r\n      const res = await (await fetch(url)).json();\r\n      getSerachedLocationWeekForecast(res.lat, res.lon);\r\n        dispatch({\r\n          type: GET_USER_LOCATION,\r\n          payload: res,\r\n        });\r\n      setTimeout(() => dispatch({ type: ClEAR_ERROR }), 5000);\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: CLEAR_ALL,\r\n      });\r\n    }\r\n\r\n}\r\n\r\n  // Get Weather Data of Searched Loacation\r\n  const getSerachedLocationData = async (text: string) => {\r\n    const location = text === \"\" ? \"London\" : text;\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`;\r\n   \r\n    try {\r\n      const res = await (await fetch(url)).json();\r\n      if (res.cod === 200) {\r\n      getSerachedLocationWeekForecast(res.coord.lat, res.coord.lon);\r\n        dispatch({\r\n          type: GET_SEARCHED_LOCATION,\r\n          payload: res,\r\n        });\r\n        return;\r\n      }\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: res.message,\r\n      });\r\n      setTimeout(() => dispatch({ type: ClEAR_ERROR }), 5000);\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: CLEAR_ALL,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Get 7 Days Weather Forecast of Searched Loacation\r\n  const getSerachedLocationWeekForecast = async (\r\n    lat: number | \"\",\r\n    lon: number | \"\"\r\n  ) => {\r\n    if (lat !== \"\" && lon !== \"\") {\r\n      const url =\r\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely,&units=metric&appid=${API_KEY}`;\r\n      try {\r\n        const res = await (await fetch(url)).json();\r\n        dispatch({\r\n          type: GET_WEEK_FORECAST,\r\n          payload: res,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n  // Set Weather Day\r\n  const setWeatherDay = async (daily: Daily) => {\r\n    dispatch({\r\n      type: SET_CURRENT,\r\n      payload: daily,\r\n    });\r\n  };\r\n  // Set loading\r\n  const setLoading = () => {\r\n    dispatch({\r\n      type: SET_LOADING,\r\n    });\r\n  };\r\n  // Switch Theme\r\n  const switchTheme = () => {\r\n    dispatch({\r\n      type: SET_THEME,\r\n    });\r\n  };\r\n  // Clear All\r\n  const clearAll = () => {\r\n    dispatch({\r\n      type: CLEAR_ALL,\r\n    });\r\n  };\r\n\r\n  // return Provider\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        UserLocation: state.UserLocation,\r\n        SearchedLocation: state.SearchedLocation,\r\n        WeekForeCast: state.WeekForeCast,\r\n        Current: state.Current,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        theme: state.theme,\r\n        getUserLocationWeather,\r\n        getSerachedLocationData,\r\n        getSerachedLocationWeekForecast,\r\n        setWeatherDay,\r\n        setLoading,\r\n        switchTheme,\r\n        clearAll,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  form {\r\n    width: 90%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n  \r\n  .search-input {\r\n    width: 100%;\r\n    height: 40px;\r\n    border-radius: 50px;\r\n    border: none;\r\n    font-size: 16px;\r\n    color: #5d5d5d;\r\n    padding: 10px 20px;\r\n    background-color: #ffffff;\r\n    outline: none;\r\n  }\r\n  .search-input:focus,\r\n  .search-input:focus-visible,\r\n  .search-input:focus-within,\r\n  input:-internal-autofill-selected\r\n  {\r\n    background-color: #ffffff;\r\n  }\r\n  .search-submit {\r\n    position: absolute;\r\n    right: 10px;\r\n    border:none;\r\n    width:28px;\r\n    height:28px;\r\n    background-color:transparent;\r\n    border-radius:50%;\r\n  }\r\n`;\r\n","// imports\r\nimport { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../../Context/GlobalState\";\r\n\r\n// styles\r\nimport { Wrapper } from \"./SearchFrom.style\";\r\n// components\r\n\r\nconst SearchFrom = () => {\r\n  const [text, setText] = useState<string>(\"\");\r\n  const globalContext = useContext(GlobalContext);\r\n  const { getSerachedLocationData, setLoading, clearAll } = globalContext;\r\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    e.preventDefault();\r\n    setText(e.target.value);\r\n  };\r\n  const onSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n    e.preventDefault();\r\n    if (text !== \"\") {\r\n      setLoading();\r\n      clearAll();\r\n      getSerachedLocationData(text);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          className=\"search-input\"\r\n          placeholder=\"Enter Location...\"\r\n          type=\"text\"\r\n          name=\"search\"\r\n          id=\"search\"\r\n          onChange={onChange}\r\n        />\r\n        <button className=\"search-submit\" type=\"submit\">\r\n         <img src={`/icons/search-solid.svg`} alt=\"Search\"/>\r\n        </button>\r\n      </form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SearchFrom;\r\n","export default __webpack_public_path__ + \"static/media/windSoliddark.0907db23.svg\";","export default __webpack_public_path__ + \"static/media/dropletdark.6a715eed.svg\";","export default __webpack_public_path__ + \"static/media/cloudSoliddark.51bb3f5f.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 20px;\r\n  background-color: ${(props) => props.theme.cardBG};\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  max-width: 720px;\r\n  margin: 50px auto;\r\n  border-radius: 10px;\r\n  color: ${(props) => props.theme.text};\r\n  @media (min-width: 768px) {\r\n    padding: 40px;\r\n  }\r\n  .top-bar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  h4 {\r\n    color: ${(props) => props.theme.text};\r\n  }\r\n  .temperature {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-wrap: wrap-reverse;\r\n    @media (min-width: 476px) {\r\n      flex-wrap: nowrap;\r\n      justify-content: space-between;\r\n    }\r\n  }\r\n  .temperature-info {\r\n    text-align: center;\r\n    @media (min-width: 768px) {\r\n      text-align: left;\r\n    }\r\n  }\r\n  .temperature-temp {\r\n    font-size: 34px;\r\n    line-height: 1.2;\r\n  }\r\n  .temperature-icon .weather-img {\r\n    width: 100px;\r\n    height: 100px;\r\n    @media (min-width: 768px) {\r\n      width: 200px;\r\n      height: 200px;\r\n    }\r\n  }\r\n  .temperature-icon img {\r\n    width: 100px;\r\n    @media (min-width: 768px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n  .taglist {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-top: 20px;\r\n  }\r\n  .tags {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-right: 10px;\r\n  }\r\n  .tags .tag-text {\r\n    font-size: 12px;\r\n  }\r\n  .tags img {\r\n    margin-right: 10px;\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n  .enter-loc {\r\n    color: ${(props) => props.theme.text};\r\n    text-align: center;\r\n  }\r\n`;\r\n","//\r\nimport windSolidDark from \"../../assets/windSoliddark.svg\";\r\nimport dropletDark from \"../../assets/dropletdark.svg\";\r\nimport cloudSolidDark from \"../../assets/cloudSoliddark.svg\";\r\nimport { SearchLocationData } from \"../../Context/Interfaces\";\r\n// styles\r\nimport { Wrapper } from \"./WeatherCard.style\";\r\nconst LocationCard = ({ Weather }: { Weather: SearchLocationData }) => {\r\n  const { name, main, weather, dt, wind, clouds } = Weather;\r\n  const { temp, humidity } = main;\r\n  const { description, icon } = weather[0];\r\n  const date = new Date(dt * 1000);\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"top-bar\">\r\n        <h4>{name}</h4>\r\n        <h4>{date.toLocaleDateString()}</h4>\r\n      </div>\r\n      <div className=\"temperature\">\r\n        <div className=\"temperature-info\">\r\n          <h2 className=\"temperature-temp\">{temp} ° C</h2>\r\n          <h2 className=\"temperature-temp\">{description.toUpperCase()}</h2>\r\n        </div>\r\n        <div className=\"temperature-icon\">\r\n          <div className=\"weather-img\">\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${icon}@4x.png`}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"taglist\">\r\n        <div className=\"tags\">\r\n          <img src={windSolidDark} alt=\"\" />{\" \"}\r\n          <div className=\"tag-text\">{wind.speed} m/s</div>\r\n        </div>\r\n        <div className=\"tags\">\r\n          <img src={dropletDark} alt=\"\" />{\" \"}\r\n          <div className=\"tag-text\">{humidity} %</div>\r\n        </div>\r\n        <div className=\"tags\">\r\n          <img src={cloudSolidDark} alt=\"\" />{\" \"}\r\n          <div className=\"tag-text\">{clouds.all} %</div>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LocationCard;\r\n","//\r\nimport windSolidDark from \"../../assets/windSoliddark.svg\";\r\nimport dropletDark from \"../../assets/dropletdark.svg\";\r\nimport cloudSolidDark from \"../../assets/cloudSoliddark.svg\";\r\nimport { UserLocationData } from \"../../Context/Interfaces\";\r\n// styles\r\nimport { Wrapper } from \"./WeatherCard.style\";\r\nconst LocationCard = ({ Weather }: { Weather: UserLocationData }) => {\r\n  const {  current } = Weather;\r\n  const { temp, humidity, weather, dt, wind_speed, clouds } = current;\r\n  const { description, icon } = weather[0];\r\n  const date = new Date(dt * 1000);\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"top-bar\">\r\n        <h4>Weather At Your Location</h4>\r\n        <h4>{date.toLocaleDateString()}</h4>\r\n      </div>\r\n      <div className=\"temperature\">\r\n        <div className=\"temperature-info\">\r\n          <h2 className=\"temperature-temp\">{temp} ° C</h2>\r\n          <h2 className=\"temperature-temp\">{description.toUpperCase()}</h2>\r\n        </div>\r\n        <div className=\"temperature-icon\">\r\n          <div className=\"weather-img\">\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${icon}@4x.png`}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"taglist\">\r\n        <div className=\"tags\">\r\n          <img src={windSolidDark} alt=\"\" />{\" \"}\r\n          <div className=\"tag-text\">{wind_speed} m/s</div>\r\n        </div>\r\n        <div className=\"tags\">\r\n          <img src={dropletDark} alt=\"\" />{\" \"}\r\n          <div className=\"tag-text\">{humidity} %</div>\r\n        </div>\r\n        <div className=\"tags\">\r\n          <img src={cloudSolidDark} alt=\"\" />{\" \"}\r\n          <div className=\"tag-text\">{clouds} %</div>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LocationCard;\r\n","export default __webpack_public_path__ + \"static/media/windSolid.a228ff48.svg\";","export default __webpack_public_path__ + \"static/media/droplet.ed1cab08.svg\";","export default __webpack_public_path__ + \"static/media/cloudSolid.a68a7564.svg\";","//\r\nimport windSolid from \"../../assets/windSolid.svg\";\r\nimport droplet from \"../../assets/droplet.svg\";\r\nimport cloudSolid from \"../../assets/cloudSolid.svg\";\r\nimport { Daily, SearchLocationData } from \"../../Context/Interfaces\";\r\n// styles\r\nimport { Wrapper } from \"./WeatherCard.style\";\r\nconst WeekDayCard = ({\r\n  Weather,\r\n  Searched,\r\n}: {\r\n  Weather: Daily;\r\n  Searched: SearchLocationData | null;\r\n}) => {\r\n  const { temp, weather, wind_speed, dt, humidity, clouds } = Weather;\r\n  \r\n  const  name  = Searched !== null ? Searched.name : \"Your Location Data\";\r\n  \r\n\r\n  const date = new Date(dt * 1000);\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"top-bar\">\r\n        <h4>{name}</h4>\r\n        <h4>{date.toLocaleDateString()}</h4>\r\n      </div>\r\n      <div className=\"temperature\">\r\n        <div className=\"temperature-info\">\r\n          <h2 className=\"temperature-temp\">{temp.max} ° C</h2>\r\n          <h2 className=\"temperature-temp\">\r\n            {weather[0].description.toUpperCase()}\r\n          </h2>\r\n        </div>\r\n        <div className=\"temperature-icon\">\r\n          <div className=\"weather-img\">\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${weather[0].icon}@4x.png`}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"taglist\">\r\n        <div className=\"tags\">\r\n          <img src={windSolid} alt=\"\" />{\" \"}\r\n          <div className=\"tag-text\">{wind_speed} m/s</div>\r\n        </div>\r\n        <div className=\"tags\">\r\n          <img src={droplet} alt=\"\" />{\" \"}\r\n          <div className=\"tag-text\">{humidity} %</div>\r\n        </div>\r\n        <div className=\"tags\">\r\n          <img src={cloudSolid} alt=\"\" />{\" \"}\r\n          <div className=\"tag-text\">{clouds} %</div>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default WeekDayCard;\r\n","//\r\nimport { Fragment, useContext } from \"react\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport { GlobalContext } from \"../../Context/GlobalState\";\r\nimport LocationCard from \"./LocationCard\";\r\nimport UserLocCard from \"./UserLocCard\";\r\nimport WeekDayCard from \"./WeakDayCard\";\r\n// styles\r\nimport { Wrapper } from \"./WeatherCard.style\";\r\nconst WeatherCard: React.FC = () => {\r\n  const globalContext = useContext(GlobalContext);\r\n  const { SearchedLocation, Current, UserLocation } = globalContext;\r\n\r\n  const transitionUser = useTransition(UserLocation, {\r\n    from: { opacity: 0, height: 0, width: 0 },\r\n    enter: { opacity: 1, height: \"auto\", width: \"auto\" },\r\n  });\r\n  const transitionCurr = useTransition(Current, {\r\n    from: { opacity: 0, height: 0, width: 0 },\r\n    enter: { opacity: 1, height: \"auto\", width: \"auto\" },\r\n  });\r\n  const transitionLoc = useTransition(SearchedLocation, {\r\n    from: { opacity: 0, height: 0, width: 0 },\r\n    enter: { opacity: 1, height: \"auto\", width: \"auto\" },\r\n  });\r\n  if (UserLocation === null) {\r\n    return (\r\n      <Wrapper>\r\n        <h1 className=\"enter-loc\">Enter Location....</h1>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {Current !== null\r\n        ? transitionCurr(\r\n            (style, item) =>\r\n              item && (\r\n                <animated.div style={style}>\r\n                  <WeekDayCard Weather={Current} Searched={SearchedLocation} />\r\n                </animated.div>\r\n              )\r\n          )\r\n        : ( SearchedLocation !== null ?\r\n           transitionLoc(\r\n            (style, item) =>\r\n              item && (\r\n                <animated.div style={style}>\r\n                  <LocationCard Weather={SearchedLocation} />\r\n                </animated.div>\r\n              )\r\n          )\r\n          :\r\n          transitionUser(\r\n            (style, item) =>\r\n              item && (\r\n                <animated.div style={style}>\r\n                  <UserLocCard Weather={UserLocation} />\r\n                </animated.div>\r\n              )\r\n          )\r\n        )\r\n        }\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  color: ${(props) => props.theme.text};\r\n  overflow-x: auto;\r\n  width: 100%;\r\n  display: flex;\r\n  @media (min-width: 768px) {\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    flex-wrap: wrap;\r\n  }\r\n  .card {\r\n    padding: 10px;\r\n    background-color: ${(props) => props.theme.cardBG};\r\n    border-radius: 10px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n  .date {\r\n    font-size: 12px;\r\n  }\r\n  .temprature-maxmin {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import { Daily } from \"../../Context/Interfaces\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../Context/GlobalState\";\r\nconst WeekDay = ({ day }: { day: Daily }) => {\r\n  const date = new Date(day.dt * 1000);\r\n  const weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  const globalContext = useContext(GlobalContext);\r\n  const { setWeatherDay } = globalContext;\r\n  const onClick: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n    e.preventDefault();\r\n    setWeatherDay(day);\r\n  };\r\n  return (\r\n    <div className=\"card\" onClick={onClick}>\r\n      <h4 className=\"day\">{weekday[date.getDay()]}</h4>\r\n      <span className=\"date\">{date.toLocaleDateString()}</span>\r\n      <div className=\"icon\">\r\n        <img\r\n          src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"temprature-maxmin\">\r\n        <p>Max</p>\r\n        <p>Min</p>\r\n      </div>\r\n      <div className=\"temprature-maxmin\">\r\n        <p>{day.temp.max}</p>\r\n        <p>{day.temp.min}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeekDay;\r\n","import { useContext} from \"react\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport { GlobalContext } from \"../../Context/GlobalState\";\r\n// styles\r\nimport { Wrapper } from \"./WeekForcast.style\";\r\n// Components\r\nimport WeekDay from \"./WeekDay\";\r\nconst WeekList = () => {\r\n  const globalContext = useContext(GlobalContext);\r\n  const { WeekForeCast } =\r\n    globalContext;\r\n\r\n  const transitions = useTransition(WeekForeCast?.daily!, {\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n  });\r\n \r\n  return (\r\n    <Wrapper>\r\n      {WeekForeCast &&\r\n        transitions((style, day) => (\r\n          <animated.div style={style}>\r\n            <WeekDay key={day.dt} day={day} />\r\n          </animated.div>\r\n        ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default WeekList;\r\n","import styled from \"styled-components\";\r\nexport const Error = styled.div`\r\n  position: absolute;\r\n  right: 30px;\r\n  top: 0px;\r\n  padding: 5px 10px;\r\n  background-color: #f93b3b;\r\n  text-transform: capitalize;\r\n  color: #fff;\r\n`;\r\n","import { Error } from \"./Alert.style\";\r\nconst Alert = ({ error }: { error: string }) => {\r\n  return (\r\n    <Error>\r\n      <i className=\"fas fa-info-circle\" /> {error}\r\n    </Error>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst translate = keyframes`\r\n  from {\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  to {\r\n    transform: translateX(0%);\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: auto;\r\n  background-color: #bdbdbd;\r\n  div {\r\n    height: 4px;\r\n    width: 100%;\r\n    background-color: #3b82f6;\r\n    animation: ${translate} 0.5s linear infinite;\r\n  }\r\n`;\r\nconst LoadingBar = () => {\r\n  return (\r\n    <Wrapper>\r\n      <div></div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LoadingBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 15px 15px;\r\n  .nav {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n  }\r\n\r\n  .nav a{\r\n    width:48px;\r\n    height:48px;\r\n    padding:10px;\r\n    border-radius:50%;\r\n    background-color: #ffffff;\r\n  }\r\n  .nav a:hover, .nav a:focus{\r\n    background-color:#fff;\r\n  }\r\n  \r\n`;\r\n","import { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../Context/GlobalState\";\r\nimport { Wrapper } from \"./ThemeToggleBtn.style\";\r\nconst ThemeToggleBtn = () => {\r\n  const globalContext = useContext(GlobalContext);\r\n  const { switchTheme, theme } = globalContext;\r\n  const onClick:React.MouseEventHandler<HTMLAnchorElement> = (e) => {\r\n    switchTheme();\r\n  };\r\n  return (\r\n    <Wrapper>\r\n    \r\n        <div className=\"nav\">\r\n          <a href=\"#!\" onClick={onClick}><img src={`/icons/${theme === true ? 'moon-solid' : 'sun-regular'}.svg`} alt=\"theme switcher\"/></a>   \r\n        </div>\r\n\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ThemeToggleBtn;\r\n","import { useContext, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n// styles\nimport \"./App.css\";\n//styled-containers\nimport {\n  Container,\n  Title,\n  BodyWrapper,\n} from \"./components/styled-components/Container\";\n//components\nimport SearchFrom from \"./components/SearchForm/SearchFrom\";\nimport WeatherCard from \"./components/WeatherCard/WeatherCard\";\nimport WeekList from \"./components/WeekForcast/WeekList\";\nimport Alert from \"./components/Alert/Alert\";\n// Providers\nimport { GlobalContext } from \"./Context/GlobalState\";\nimport LoadingBar from \"./components/LoadingBar/LoadingBar\";\nimport ThemeToggleBtn from \"./components/ThemeToggleBtn/ThemeToggleBtn\";\n\nfunction App() {\n  const globalContext = useContext(GlobalContext);\n  const { error, loading, theme, getUserLocationWeather } = globalContext;\n  useEffect(() => {\n    getUserLocationWeather();\n  // eslint-disable-next-line\n  }, [])\n  const dark = {\n    text: \"#fff\",\n    cardBG: \"#2d2d3c\",\n    bodyBg: \"#23232f\",\n  };\n  const light = {\n    text: \"#5d5d5d\",\n    cardBG: \"#6defd1\",\n    bodyBg: \"#e1fff8\",\n  };\n  return (\n    <ThemeProvider theme={theme === true ? light : dark}>\n      <BodyWrapper>\n        {loading && <LoadingBar />}\n        <ThemeToggleBtn/>\n        <Container>\n          {error && <Alert error={error} />}\n          <Title>Weather Today</Title>\n          <SearchFrom />\n          <WeatherCard />\n          <WeekList />\n        </Container>\n      </BodyWrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GlobalProvider } from \"./Context/GlobalState\";\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalProvider>\n      <App />\n    </GlobalProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}